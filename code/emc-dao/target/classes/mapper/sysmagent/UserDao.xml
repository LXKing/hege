<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huak.auth.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.huak.auth.model.User" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="LOGIN" property="login" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="LOGIN_TIME" property="loginTime" jdbcType="VARCHAR" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="VARCHAR" />
    <result column="LOGIN_NUM" property="loginNum" jdbcType="INTEGER" />
    <result column="USE_STATUS" property="useStatus" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="EMP_ID" property="empId" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 查询组织机构和员工关系的resultMap -->
  <resultMap id="OrgEmpResultMap" type="com.huak.auth.model.vo.OrgEmpVo" >
    <id column="ORGID" property="orgId" jdbcType="VARCHAR" />
    <result column="EMPID" property="empId" jdbcType="VARCHAR" />
    <result column="EMPNAME" property="empName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 要查询的列 -->
  <sql id="Base_Column_List" >
    ID, LOGIN, PASSWORD, USER_NAME, MOBILE, MAIL, LOGIN_TIME, LAST_LOGIN_TIME, LOGIN_NUM, 
    USE_STATUS, MEMO, ORG_ID,CREATOR, CREATE_TIME,EMP_ID
  </sql>
  
  <!-- 根据主键查询用户信息 -->
  <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_emc_auth_user
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据登录名称查询用户是否存在 -->
  <select id="selectUserCountByLogin" parameterType="java.lang.String" resultType="java.lang.Long">
  	select count(1) from t_emc_auth_user where LOGIN = #{login,jdbcType=VARCHAR}
  </select>
  
  <!-- selectOrgEmpById 查询组织机构下的员工信息 -->
  <select id="selectOrgEmpById" parameterType="java.lang.String" resultMap="OrgEmpResultMap">
  	select ID EMPID,EMP_NAME EMPNAME,ORG_ID ORGID from t_emc_auth_employee where ORG_ID=#{orgId,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询用户列表信息 -->
  <select id="selectPageByMap" parameterType="java.util.Map" resultMap="BaseResultMap" >
  	select 
	  	u1.ID, u1.LOGIN, u1.PASSWORD, u1.USER_NAME, u1.MOBILE, u1.MAIL, u1.LOGIN_TIME, u1.LAST_LOGIN_TIME, u1.LOGIN_NUM, 
	    u1.USE_STATUS, u1.MEMO, u1.ORG_ID,u1.CREATOR, u1.CREATE_TIME,u1.EMP_ID,u2.USER_NAME CREATE_NAME
	from t_emc_auth_user u1 LEFT JOIN t_emc_auth_user u2 on u1.CREATOR = u2.ID
	where 1=1
    <if test="orgId!=null and orgId!=''"> and u1.ORG_ID = #{orgId,jdbcType=VARCHAR}</if>
    <if test="userName!=null and userName!=''"> and u1.USER_NAME LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')</if>
    <if test="userAccount!=null and userAccount!=''"> and u1.LOGIN LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%')</if>
  	<if test="userStatus!=null and userStatus!=''"> and u1.USE_STATUS = #{userStatus,jdbcType=VARCHAR}</if>
  	<if test="creator!=null and creator!=''"> and u2.USER_NAME LIKE CONCAT('%',#{creator,jdbcType=VARCHAR},'%')</if>
  	<if test="cStartTime!=null and cStartTime!=''"> and u1.CREATE_TIME >= #{cStartTime,jdbcType=VARCHAR}</if>
  	<if test="cEndTime!=null and cEndTime!=''"> and u1.CREATE_TIME &lt;= #{cEndTime,jdbcType=VARCHAR}</if>
  	<if test="lStartTime!=null and lStartTime!=''"> and u1.LOGIN_TIME >= #{lStartTime,jdbcType=VARCHAR}</if>
  	<if test="lEndTime!=null and lEndTime!=''"> and u1.LOGIN_TIME &lt;= #{lEndTime,jdbcType=VARCHAR}</if>
  </select>
  
  <!-- selectUser2Excel 导出符合条件的用户信息到excel -->
  <select id="selectUser2Excel" parameterType="java.util.Map" resultType="java.util.Map" >
  	select 
	  	u1.ID, u1.LOGIN, u1.PASSWORD, u1.USER_NAME, u1.MOBILE, u1.MAIL, u1.LOGIN_TIME, u1.LAST_LOGIN_TIME, u1.LOGIN_NUM, 
	    (case u1.USE_STATUS when '0' then '启用' when '1' then '禁用' end) USE_STATUS, u1.MEMO, u1.ORG_ID,u1.CREATOR, 
	    u1.CREATE_TIME,u1.EMP_ID,u2.USER_NAME CREATE_NAME
	from t_emc_auth_user u1 LEFT JOIN t_emc_auth_user u2 on u1.CREATOR = u2.ID
	where 1=1
    <if test="orgId!=null and orgId!=''"> and u1.ORG_ID = #{orgId,jdbcType=VARCHAR}</if>
    <if test="userName!=null and userName!=''"> and u1.USER_NAME LIKE CONCAT('%',#{userName,jdbcType=VARCHAR},'%')</if>
    <if test="userAccount!=null and userAccount!=''"> and u1.LOGIN LIKE CONCAT('%',#{userAccount,jdbcType=VARCHAR},'%')</if>
  	<if test="userStatus!=null and userStatus!=''"> and u1.USE_STATUS = #{userStatus,jdbcType=VARCHAR}</if>
  	<if test="creator!=null and creator!=''"> and u2.USER_NAME LIKE CONCAT('%',#{creator,jdbcType=VARCHAR},'%')</if>
  	<if test="cStartTime!=null and cStartTime!=''"> and u1.CREATE_TIME >= #{cStartTime,jdbcType=VARCHAR}</if>
  	<if test="cEndTime!=null and cEndTime!=''"> and u1.CREATE_TIME &lt;= #{cEndTime,jdbcType=VARCHAR}</if>
  	<if test="lStartTime!=null and lStartTime!=''"> and u1.LOGIN_TIME >= #{lStartTime,jdbcType=VARCHAR}</if>
  	<if test="lEndTime!=null and lEndTime!=''"> and u1.LOGIN_TIME &lt;= #{lEndTime,jdbcType=VARCHAR}</if>
  </select>
  
  <!-- 删除用户信息，可批量 -->
  <delete id="deleteUsers" parameterType="java.lang.String" >
    delete from t_emc_auth_user
    where ID in 
	<foreach item="id" collection="array" open="(" separator="," close=")">
		#{id}
	</foreach>
  </delete>
  
  <insert id="insertByPrimaryKeySelective" parameterType="com.huak.auth.model.User" >
    insert into t_emc_auth_user (ID, LOGIN, PASSWORD, 
      USER_NAME, MOBILE, MAIL, 
      LOGIN_TIME, LAST_LOGIN_TIME, LOGIN_NUM, 
      USE_STATUS, MEMO,ORG_ID, CREATOR, 
      CREATE_TIME,EMP_ID)
    values (#{id,jdbcType=VARCHAR}, #{login,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=VARCHAR}, #{loginNum,jdbcType=INTEGER}, 
      #{useStatus,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR},#{orgId,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR},#{empId,jdbcType=VARCHAR})
  </insert>
  
  <!-- 新增用户 -->
  <insert id="insertUser" parameterType="com.huak.auth.model.User" >
    insert into t_emc_auth_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="login != null" >
        LOGIN,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="mail != null" >
        MAIL,
      </if>
      <if test="loginTime != null" >
        LOGIN_TIME,
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME,
      </if>
      <if test="loginNum != null" >
        LOGIN_NUM,
      </if>
      <if test="useStatus != null" >
        USE_STATUS,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="orgId != null" >
        ORG_ID,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
<!--       <if test="createTime != null" > -->
        CREATE_TIME,
<!--       </if> -->
	  <if test="empId != null" >
        EMP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="login != null" >
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="loginNum != null" >
        #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="useStatus != null" >
        #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
        now(),
      <if test="empId != null" >
        #{empId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 重置密码可以多个 -->
  <update id="updateUser2ResetPwd" >
    update t_emc_auth_user set PASSWORD = #{initPwd} where ID in
    <foreach item="id" collection="ids" open="(" close=")" separator="," >
    	#{id}
    </foreach>
  </update>
  
  <!-- updateUser2Status 禁用或启用 -->
  <update id="updateUser2Status">
  	update t_emc_auth_user set USE_STATUS = #{status} where ID in
    <foreach item="id" collection="ids" open="(" close=")" separator="," >
    	#{id}
    </foreach>
  </update>
  <!-- 用户登录成功，修改用户信息 -->
  <update id="update2LoginSuccess">
  	update t_emc_auth_user set LOGIN_NUM = (LOGIN_NUM+1),LAST_LOGIN_TIME = LOGIN_TIME,LOGIN_TIME=NOW() where ID = #{id}
  </update>
  <!-- 更新用户信息 -->
  <update id="updateUser" parameterType="com.huak.auth.model.User" >
    update t_emc_auth_user
    <set >
      <if test="login != null" >
        LOGIN = #{login,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        MAIL = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        LOGIN_TIME = #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=VARCHAR},
      </if>
      <if test="loginNum != null" >
        LOGIN_NUM = #{loginNum,jdbcType=INTEGER},
      </if>
      <if test="useStatus != null" >
        USE_STATUS = #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        ORG_ID = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime == null or createTime == ''" >
        CREATE_TIME = now(),
      </if>
      <if test="createTime!=null">
      	CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="empId!=null">
      	EMP_ID = #{empId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.huak.auth.model.User" >
    update t_emc_auth_user
    set LOGIN = #{login,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      MAIL = #{mail,jdbcType=VARCHAR},
      LOGIN_TIME = #{loginTime,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=VARCHAR},
      LOGIN_NUM = #{loginNum,jdbcType=INTEGER},
      USE_STATUS = #{useStatus,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      ORG_ID = #{orgId,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      EMP_ID = #{empId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

    <select id="findByLoginAndPwd" parameterType="com.huak.auth.model.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_emc_auth_user
        where LOGIN=#{login} and PASSWORD=#{password}
    </select>

    <select id="selectMenusByUser"  parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
	tm.ID id,
	tm.MENU_NAME menuName,
	tm.MENU_URL menuUrl,
	tm.P_MENU_ID pMenuId,
	tm.MENU_TYPE menuType,
	tm.SEQ seq,
	tm.MENU_ICON menuIcon
FROM
	t_emc_auth_user tu,
	t_emc_auth_role tr,
	t_emc_auth_role_user_rel tru,
	t_emc_auth_func tf,
	t_emc_auth_menu tm,
	t_emc_auth_role_func_rel trf
WHERE
	tu.ID = tru.USER_ID
AND tr.ID = tru.ROLE_ID
AND tr.ID = trf.ROLE_ID
AND tf.ID = trf.FUNC_ID
AND tf.MENU_ID = tm.ID
AND tu.ID = #{id}
AND tm.MENU_TYPE = #{menuType}
AND tm.P_MENU_ID = #{pMenuId}
GROUP BY tm.ID
order by tm.SEQ
    </select>

    <select id="getAuthByUser" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
	tf.UNAME uname
FROM
	t_emc_auth_user tu,
	t_emc_auth_role tr,
	t_emc_auth_role_user_rel tru,
	t_emc_auth_func tf,
	t_emc_auth_role_func_rel trf
WHERE
	tu.ID = tru.USER_ID
AND tr.ID = tru.ROLE_ID
AND tr.ID = trf.ROLE_ID
AND tf.ID = trf.FUNC_ID
AND tu.ID = #{id}
    </select>

    <select id="selectUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_emc_auth_user
        where LOGIN=#{userName} AND  USE_STATUS=0
    </select>
</mapper>